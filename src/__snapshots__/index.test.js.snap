// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InvertedFlatList displays ListFooterComponent inside ListHeaderComponent if its passsed as a prop 1`] = `
<RCTScrollView
  ListFooterComponent={[Function]}
  ListHeaderComponent={[Function]}
  data={
    Array [
      Object {
        "id": "1",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  invertStickyHeaders={true}
  inverted={true}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshOffset={20}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Array [
      Object {
        "transform": Array [
          Object {
            "scaleY": -1,
          },
        ],
      },
      undefined,
    ]
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scaleY": -1,
            },
          ],
        }
      }
    >
      <View>
        <View>
          <Text>
            List Header
          </Text>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <View>
        <Text>
          Hello World
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scaleY": -1,
            },
          ],
        }
      }
    >
      <View />
    </View>
  </View>
</RCTScrollView>
`;

exports[`InvertedFlatList displays ListHeaderComponent inside ListFooterComponent if its passsed as a prop 1`] = `
<RCTScrollView
  ListFooterComponent={[Function]}
  ListHeaderComponent={[Function]}
  data={
    Array [
      Object {
        "id": "1",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  invertStickyHeaders={true}
  inverted={true}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshOffset={20}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Array [
      Object {
        "transform": Array [
          Object {
            "scaleY": -1,
          },
        ],
      },
      undefined,
    ]
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scaleY": -1,
            },
          ],
        }
      }
    >
      <View />
    </View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <View>
        <Text>
          Hello World
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scaleY": -1,
            },
          ],
        }
      }
    >
      <View>
        <View>
          <Text>
            List Header
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`InvertedFlatList renders correctly 1`] = `
<RCTScrollView
  ListFooterComponent={[Function]}
  ListHeaderComponent={[Function]}
  data={
    Array [
      Object {
        "id": "1",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  invertStickyHeaders={true}
  inverted={true}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshOffset={20}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Array [
      Object {
        "transform": Array [
          Object {
            "scaleY": -1,
          },
        ],
      },
      undefined,
    ]
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scaleY": -1,
            },
          ],
        }
      }
    >
      <View />
    </View>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <View>
        <Text>
          Hello World
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scaleY": -1,
            },
          ],
        }
      }
    >
      <View />
    </View>
  </View>
</RCTScrollView>
`;
